// pages/common-method/common-method.js
Page({

  /**
   * 页面的初始数据
   */
  data: {
    articleData: [
      {
          "title": "判断是否是新建的数据",
          "content": "<pre class=\"language-rb\"><code><span class=\"token variable\">@project</span><span class=\"token punctuation\">.</span>new_record<span class=\"token operator\">?</span>  <span class=\"token operator\">?</span> <span class=\"token builtin\">Time</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">new</span><span class=\"token punctuation\">.</span>year <span class=\"token punctuation\">:</span> <span class=\"token variable\">@project</span><span class=\"token punctuation\">.</span>index_year\n</code></pre>"
      },
      {
          "title": "遍历数据库的数据",
          "content": "<pre class=\"language-rb\"><code><span class=\"token constant\">Project</span><span class=\"token punctuation\">.</span>find_each <span class=\"token keyword\">do</span> <span class=\"token operator\">|</span>project<span class=\"token operator\">|</span>  \n  code  \n<span class=\"token keyword\">end</span>\n</code></pre>"
      },
      {
          "title": "将数字“1”变为“01”",
          "content": "<pre class=\"language-sh\"><code>pry<span class=\"token punctuation\">(</span>main<span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">\"%02d\"</span> % <span class=\"token number\">1</span>  // <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">\"01\"</span>\n</code></pre>"
      },
      {
          "title": "实例方法和类方法",
          "content": "<pre class=\"language-rb\"><code><span class=\"token comment\">#实例方法</span>\n<span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">hello</span></span>\n\n<span class=\"token keyword\">end</span>\n\n<span class=\"token comment\">#类方法</span>\n<span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span><span class=\"token function\">hello</span></span>\n\n<span class=\"token keyword\">end</span>\n\n</code></pre>"
      },
      {
          "title": "删除某个字符串中的某些字符",
          "content": "<pre class=\"language-sh\"><code>pry<span class=\"token punctuation\">(</span>main<span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">\"hello word\"</span>.delete<span class=\"token punctuation\">(</span><span class=\"token string\">\"l\"</span><span class=\"token punctuation\">)</span> // <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">\"heo word\"</span>\n</code></pre>"
      },
      {
          "title": "价格的格式输入",
          "content": "<pre class=\"language-erb\"><code><span class=\"token erb language-erb\"><span class=\"token delimiter punctuation\">&lt;%=</span> number_to_currency<span class=\"token punctuation\">(</span>cost<span class=\"token punctuation\">.</span>money<span class=\"token punctuation\">,</span><span class=\"token symbol\">:unit</span><span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span><span class=\"token string\">\"￥\"</span><span class=\"token punctuation\">,</span><span class=\"token symbol\">:separator</span><span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span><span class=\"token string\">\".\"</span><span class=\"token punctuation\">,</span><span class=\"token symbol\">:delimiter</span><span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span> <span class=\"token delimiter punctuation\">%&gt;</span></span>\n:precesion   //指定数字的精度，默认为2\n:unit     //指定货币输出格式,默认为$\n:separator //指定整数与小数之间的分隔符,默认为 \".\"\n:delimiter  //指定整数部分的定界符\nsprintf方法\n<span class=\"token erb language-erb\"><span class=\"token delimiter punctuation\">&lt;%=</span>sprintf<span class=\"token punctuation\">(</span><span class=\"token string\">\"￥%0.02f\"</span><span class=\"token punctuation\">,</span>product<span class=\"token punctuation\">.</span>price<span class=\"token punctuation\">)</span><span class=\"token delimiter punctuation\">%&gt;</span></span>\n</code></pre>"
      },
      {
          "title": "路由的过滤",
          "content": "<pre class=\"language-sh\"><code>$ rake routes <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> 资源名\n</code></pre>"
      },
      {
          "title": "判断某个集合中是否包含某个值",
          "content": "<pre class=\"language-rb\"><code><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>include<span class=\"token operator\">?</span> <span class=\"token number\">3</span> <span class=\"token comment\"># =&gt; true</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>include<span class=\"token operator\">?</span> <span class=\"token number\">4</span> <span class=\"token comment\"># =&gt; flase</span>\n</code></pre>"
      },
      {
          "title": "集合式查询语句",
          "content": "<pre class=\"language-rb\"><code><span class=\"token constant\">Cost</span><span class=\"token punctuation\">.</span>where<span class=\"token punctuation\">(</span>project_id<span class=\"token punctuation\">:</span> current_user<span class=\"token punctuation\">.</span>projects<span class=\"token punctuation\">.</span>map<span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token symbol\">:id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token constant\">User</span><span class=\"token punctuation\">.</span>where<span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">:</span> user_department<span class=\"token punctuation\">.</span>all<span class=\"token punctuation\">.</span>map<span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token symbol\">:user_id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>"
      },
      {
          "title": "创建模型时不生成test文件",
          "content": "<pre class=\"language-sh\"><code>$  g model cost -t nil \n</code></pre>"
      },
      {
          "title": "日期格式化",
          "content": "<pre class=\"language-rb\"><code>time<span class=\"token punctuation\">.</span>strftime<span class=\"token punctuation\">(</span><span class=\"token string\">\"%Y-%m-%d %H:%M:%S\"</span><span class=\"token punctuation\">)</span>\n</code></pre>"
      },
      {
          "title": "复选框",
          "content": "<pre class=\"language-erb\"><code><span class=\"token erb language-erb\"><span class=\"token delimiter punctuation\">&lt;%=</span> check_box_tag <span class=\"token string\">\"users[]\"</span><span class=\"token punctuation\">,</span> 需要传的值<span class=\"token punctuation\">,</span> <span class=\"token keyword\">true</span> <span class=\"token delimiter punctuation\">%&gt;</span></span>\n</code></pre>"
      },
      {
          "title": "数据查询（merge方法）",
          "content": "<pre class=\"language-rb\"><code><span class=\"token constant\">Post</span><span class=\"token punctuation\">.</span>order<span class=\"token punctuation\">(</span><span class=\"token string\">'id asc'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>merge<span class=\"token punctuation\">(</span><span class=\"token constant\">Post</span><span class=\"token punctuation\">.</span>unscope<span class=\"token punctuation\">(</span><span class=\"token symbol\">:order</span><span class=\"token punctuation\">)</span>\n</code></pre>"
      },
      {
          "title": "字符串变为HTML",
          "content": "<pre class=\"language-rb\"><code><span class=\"token string\">\"&lt;p&gt;你好&lt;/p&gt;\"</span><span class=\"token punctuation\">.</span>html_safe\n</code></pre>"
      },
      {
          "title": "几个判断为空的方法",
          "content": "<pre class=\"language-sh\"><code>pry<span class=\"token punctuation\">(</span>main<span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;</span> nil.nil?  <span class=\"token comment\"># =&gt; true</span>\npry<span class=\"token punctuation\">(</span>main<span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;</span> anthing_else.nil?  <span class=\"token comment\"># =&gt; false</span>\npry<span class=\"token punctuation\">(</span>main<span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;</span> a <span class=\"token operator\">=</span> nil\npry<span class=\"token punctuation\">(</span>main<span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;</span> a.nil? <span class=\"token comment\">#=&gt; true</span>\npry<span class=\"token punctuation\">(</span>main<span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">\"\"</span>.nil <span class=\"token comment\">#=&gt; true</span>\n</code></pre>"
      },
      {
          "title": "方法try作用",
          "content": "<pre class=\"language-rb\"><code><span class=\"token variable\">@user</span><span class=\"token punctuation\">.</span>try<span class=\"token punctuation\">(</span><span class=\"token symbol\">:name</span><span class=\"token punctuation\">)</span>\n</code></pre>"
      },
      {
          "title": "添加索引",
          "content": "<pre class=\"language-rb\"><code>add_index<span class=\"token punctuation\">(</span><span class=\"token punctuation\">:</span>表名<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span>字段一<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span>字段二<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> unique<span class=\"token punctuation\">:</span> <span class=\"token keyword\">true</span><span class=\"token punctuation\">)</span>\n</code></pre>"
      },
      {
          "title": "异常处理",
          "content": "<pre class=\"language-rb\"><code>  <span class=\"token keyword\">begin</span> <span class=\"token comment\">#开始</span>\n    <span class=\"token comment\">#可能出现异常的代码</span>\n  <span class=\"token keyword\">rescue</span> \n    <span class=\"token comment\">#对异常的处理方法</span>\n  <span class=\"token keyword\">else</span> \n    <span class=\"token comment\">#没有异常走的方法</span>\n  <span class=\"token keyword\">ensure</span> \n    <span class=\"token comment\">#不管有没有异常，进入该代码块</span>\n  <span class=\"token keyword\">end</span> <span class=\"token comment\">#结束</span>\n</code></pre>"
      },
      {
          "title": "事物",
          "content": "<pre class=\"language-rb\"><code>  <span class=\"token constant\">User</span><span class=\"token punctuation\">.</span>transaction <span class=\"token keyword\">do</span>\n     一个事物的增删改查\n  <span class=\"token keyword\">end</span>\n</code></pre>"
      },
      {
          "title": "表的自连接",
          "content": "<pre class=\"language-rb\"><code><span class=\"token keyword\">class</span> <span class=\"token class-name\">Employee</span> <span class=\"token operator\">&lt;</span> <span class=\"token constant\">ActiveRecord</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">Base</span>\n  has_many <span class=\"token symbol\">:subordinates</span><span class=\"token punctuation\">,</span> class_name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Employee\"</span><span class=\"token punctuation\">,</span>foreign_key<span class=\"token punctuation\">:</span> <span class=\"token string\">\"manager_id\"</span>\n  belongs_to <span class=\"token symbol\">:manager</span><span class=\"token punctuation\">,</span> class_name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Employee\"</span>\n<span class=\"token keyword\">end</span>\n<span class=\"token comment\">#方法调用</span>\n<span class=\"token variable\">@employee</span><span class=\"token punctuation\">.</span>subordinates \n<span class=\"token variable\">@employee</span><span class=\"token punctuation\">.</span>manager\n</code></pre>"
      },
      {
          "title": "表的多态关联",
          "content": "<pre class=\"language-rb\"><code><span class=\"token keyword\">class</span> <span class=\"token class-name\">Picture</span> <span class=\"token operator\">&lt;</span> <span class=\"token constant\">ActiveRecord</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">Base</span>\n   belongs_to <span class=\"token symbol\">:imageable</span><span class=\"token punctuation\">,</span> polymorphic<span class=\"token punctuation\">:</span> <span class=\"token keyword\">true</span>\n<span class=\"token keyword\">end</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Employee</span> <span class=\"token operator\">&lt;</span> <span class=\"token constant\">ActiveRecord</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">Base</span>\n   has_many <span class=\"token symbol\">:pictures</span><span class=\"token punctuation\">,</span> as<span class=\"token punctuation\">:</span> <span class=\"token symbol\">:imageable</span>\n<span class=\"token keyword\">end</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Product</span> <span class=\"token operator\">&lt;</span> <span class=\"token constant\">ActiveRecord</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">Base</span>\n   has_many <span class=\"token symbol\">:pictures</span><span class=\"token punctuation\">,</span> as<span class=\"token punctuation\">:</span> <span class=\"token symbol\">:imageable</span>\n<span class=\"token keyword\">end</span>\n</code></pre>"
      },
      {
          "title": "自动生成编号",
          "content": "<pre class=\"language-rb\"><code><span class=\"token constant\">SecureRandom</span><span class=\"token punctuation\">.</span>uuid<span class=\"token punctuation\">.</span>gsub<span class=\"token punctuation\">(</span><span class=\"token string\">\"-\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 生成16位的随机数(字母和数字)</span>\n<span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">build_project_code</span></span>\n  <span class=\"token constant\">SecureRandom</span><span class=\"token punctuation\">.</span>hex<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>scan<span class=\"token punctuation\">(</span><span class=\"token regex\">/.{4}/</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token string\">\"-\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>upcase\n<span class=\"token keyword\">end</span>\n</code></pre>"
      },
      {
          "title": "case when的使用",
          "content": "<pre class=\"language-rb\"><code><span class=\"token keyword\">case</span> status<span class=\"token punctuation\">.</span>to_sym\n  <span class=\"token keyword\">when</span> <span class=\"token symbol\">:error</span>\n    <span class=\"token string\">\"操作失败！\"</span>\n  <span class=\"token keyword\">when</span> <span class=\"token symbol\">:success</span>\n    <span class=\"token string\">\"操作成功！\"</span>\n  <span class=\"token keyword\">when</span> <span class=\"token symbol\">:notice</span>\n    <span class=\"token string\">\"温馨提示：\"</span>\n<span class=\"token keyword\">end</span>\n</code></pre>"
      },
      {
          "title": "页面引入CSS样式",
          "content": "<pre class=\"language-erb\"><code> <span class=\"token erb language-erb\"><span class=\"token delimiter punctuation\">&lt;%=</span> stylesheet_link_tag  <span class=\"token string\">'文件名'</span><span class=\"token punctuation\">,</span> media<span class=\"token punctuation\">:</span> <span class=\"token string\">'all'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'data-turbolinks-track'</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token keyword\">true</span> <span class=\"token delimiter punctuation\">%&gt;</span></span>\n</code></pre>"
      },
      {
          "title": "在新窗口打开链接",
          "content": "<pre class=\"language-rb\"><code><span class=\"token comment\">#重新打开一个新的窗口</span>\n <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">link_to_blank</span></span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>block<span class=\"token punctuation\">)</span>\n   <span class=\"token keyword\">if</span> block_given<span class=\"token operator\">?</span>\n     args <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">.</span>first <span class=\"token operator\">||</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">.</span>second <span class=\"token operator\">||</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>merge<span class=\"token punctuation\">(</span><span class=\"token symbol\">:target</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">'_blank'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n   <span class=\"token keyword\">else</span>\n     args <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">.</span>first <span class=\"token operator\">||</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">.</span>second <span class=\"token operator\">||</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">.</span>third <span class=\"token operator\">||</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>merge<span class=\"token punctuation\">(</span><span class=\"token symbol\">:target</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">'_blank'</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:title</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> args<span class=\"token punctuation\">.</span>second<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n   <span class=\"token keyword\">end</span>\n   link_to<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> block<span class=\"token punctuation\">)</span>\n <span class=\"token keyword\">end</span>\n\n<span class=\"token comment\">#弹出一个窗口</span>\n<span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">link_to_void</span></span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>block<span class=\"token punctuation\">)</span>\n  link_to<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>block_given<span class=\"token operator\">?</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"javascript:void(0)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>block<span class=\"token punctuation\">)</span> \n<span class=\"token keyword\">end</span>\n</code></pre>"
      },
      {
          "title": "修改某个表的字段的迁移文件",
          "content": "<pre class=\"language-rb\"><code><span class=\"token keyword\">class</span> <span class=\"token class-name\">ChangePaymentFieldForQualificationTemplates</span> <span class=\"token operator\">&lt;</span> <span class=\"token constant\">ActiveRecord</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">Migration</span>  \n  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">up</span></span>  \n    change_column <span class=\"token symbol\">:qualification_templates</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:payment</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:decimal</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:precision</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:scale</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token number\">2</span>  \n  <span class=\"token keyword\">end</span>  \n  \n  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">down</span></span>  \n    change_column <span class=\"token symbol\">:qualification_templates</span><span class=\"token punctuation\">,</span>  <span class=\"token symbol\">:payment</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:decimal</span>  \n    <span class=\"token comment\">#remove_column  </span>\n    <span class=\"token comment\">#add_column</span>\n  <span class=\"token keyword\">end</span>  \n<span class=\"token keyword\">end</span>  \n</code></pre>"
      },
      {
          "title": "唯一性查询",
          "content": "<pre class=\"language-rb\"><code><span class=\"token variable\">@bid_projects</span> <span class=\"token operator\">=</span> <span class=\"token variable\">@bid_packages</span><span class=\"token punctuation\">.</span>map<span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token symbol\">:bid_project</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>uniq\n</code></pre>"
      },
      {
          "title": "rails中的helper方法",
          "content": "<pre class=\"language-rb\"><code>helper<span class=\"token punctuation\">.</span>link_to。\n</code></pre>"
      },
      {
          "title": "在form_for表单中查找当前表单的symbol",
          "content": "<pre class=\"language-rb\"><code> f<span class=\"token punctuation\">.</span>object\n</code></pre>"
      },
      {
          "title": "数组下标为负数 数组下标从0开始；",
          "content": "<pre class=\"language-rb\"><code>arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"foo\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"bar\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"paid\"</span><span class=\"token punctuation\">]</span>\narr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">#=&gt; \"foo\"</span>\narr<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">#=&gt; \"paid\"</span>\narr<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">#=&gt; \"bar\"</span>\n</code></pre>"
      },
      {
          "title": "CoffeeScript的遍历的方法",
          "content": "<pre class=\"language-js\"><code>  <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.score_form1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>live <span class=\"token string\">'ajax:success'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>xhr<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">,</span> status<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>\n    count <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> data<span class=\"token punctuation\">[</span><span class=\"token string\">'pfxz'</span><span class=\"token punctuation\">]</span>\n      pg <span class=\"token operator\">=</span> <span class=\"token string\">\"pfxz_#{i}_gys_#{data['gys']}\"</span>\n      <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#tr_score_#{pg}\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">hide</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"span#score_#{pg}\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token string\">'score'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n      count <span class=\"token operator\">=</span> count<span class=\"token operator\">+</span><span class=\"token number\">1</span>\n      <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#score_progress_bar\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">progressBar</span><span class=\"token punctuation\">(</span><span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token string\">'bar'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>"
      },
      {
          "title": "想某个数组中添加数据",
          "content": "<pre class=\"language-rb\"><code><span class=\"token builtin\">Array</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">new</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">&lt;</span> <span class=\"token string\">\"data\"</span>\n</code></pre>"
      },
      {
          "title": "# IE 下下载后文件名乱码解决",
          "content": "<pre class=\"language-rb\"><code>  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">get_file_name</span></span><span class=\"token punctuation\">(</span>file_name<span class=\"token punctuation\">)</span>\n    str <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>user_agent\n    user_agent <span class=\"token operator\">=</span> <span class=\"token constant\">UserAgent</span><span class=\"token punctuation\">.</span>parse<span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span>\n    user_agent<span class=\"token punctuation\">.</span>browser <span class=\"token operator\">==</span> <span class=\"token string\">'Internet Explorer'</span> <span class=\"token operator\">?</span> <span class=\"token constant\">CGI</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>escape<span class=\"token punctuation\">(</span>file_name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> file_name\n  <span class=\"token keyword\">end</span>\n</code></pre>"
      },
      {
          "title": "解决一个循环问题",
          "content": "<pre class=\"language-rb\"><code>  <span class=\"token constant\">Permission</span><span class=\"token punctuation\">.</span>all\n  <span class=\"token variable\">@menus</span><span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token operator\">|</span>m<span class=\"token operator\">|</span>m<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> pe<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>"
      },
      {
          "title": "数组转换问题",
          "content": "<pre class=\"language-rb\"><code>   array<span class=\"token punctuation\">.</span>map<span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token symbol\">:to_i</span><span class=\"token punctuation\">)</span>  <span class=\"token operator\">/</span><span class=\"token operator\">/</span> 转为全是int型的数据\n</code></pre>"
      },
      {
          "title": "查找 两个数组相同部分的数据",
          "content": "<pre class=\"language-rb\"><code>   array1 <span class=\"token operator\">&amp;</span> array2\n</code></pre>"
      },
      {
          "title": "使用搜索插件判断大于 小于",
          "content": "<pre class=\"language-rb\"><code>  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">index_pf</span></span>\n    params<span class=\"token punctuation\">[</span><span class=\"token symbol\">:q</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token symbol\">:open_at_gt</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">Time</span><span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">.</span>to_date <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n    params<span class=\"token punctuation\">[</span><span class=\"token symbol\">:q</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token symbol\">:open_at_lt</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">Time</span><span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">.</span>to_date <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n    <span class=\"token variable\">@q</span> <span class=\"token operator\">=</span> current_user<span class=\"token punctuation\">.</span>pw_ztb_projects<span class=\"token punctuation\">.</span>over_ps<span class=\"token punctuation\">.</span>ransack<span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">[</span><span class=\"token symbol\">:q</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token variable\">@projects</span> <span class=\"token operator\">=</span>  <span class=\"token variable\">@q</span><span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">.</span>page<span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">[</span><span class=\"token symbol\">:page</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>per<span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">end</span>\n</code></pre>"
      },
      {
          "title": "使用group_by变为枚举",
          "content": "<pre class=\"language-rb\"><code>   <span class=\"token variable\">@package_first_checks</span><span class=\"token punctuation\">.</span>group_by<span class=\"token punctuation\">{</span><span class=\"token operator\">|</span>pfc<span class=\"token operator\">|</span> pfc<span class=\"token punctuation\">.</span>first_check<span class=\"token punctuation\">.</span>itype<span class=\"token punctuation\">}</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">each</span> <span class=\"token keyword\">do</span> <span class=\"token operator\">|</span>itype<span class=\"token punctuation\">,</span> pfcs<span class=\"token operator\">|</span>\n</code></pre>"
      },
      {
          "title": "将数字变为中文的",
          "content": "<pre class=\"language-rb\"><code>    <span class=\"token number\">1.</span>to_c <span class=\"token operator\">=</span> <span class=\"token string\">\"一\"</span>\n</code></pre>"
      },
      {
          "title": "出现异常可处理",
          "content": "<pre class=\"language-rb\"><code>    stand_pars_json <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span>parse<span class=\"token punctuation\">(</span><span class=\"token variable\">@quote</span><span class=\"token punctuation\">.</span>stand_pars<span class=\"token punctuation\">)</span> <span class=\"token keyword\">rescue</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n</code></pre>"
      },
      {
          "title": "hash的排序问题",
          "content": "<pre class=\"language-rb\"><code>    hash<span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">{</span><span class=\"token operator\">|</span>a<span class=\"token punctuation\">,</span>b<span class=\"token operator\">|</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span><span class=\"token operator\">&gt;</span> b<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span>  <span class=\"token comment\">#正序</span>\n    hash<span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">{</span><span class=\"token operator\">|</span>a<span class=\"token punctuation\">,</span>b<span class=\"token operator\">|</span> b<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span><span class=\"token operator\">&gt;</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span>  <span class=\"token comment\">#倒序</span>\n</code></pre>"
      },
      {
          "title": "查找某个字段为空",
          "content": "<pre class=\"language-rb\"><code>    <span class=\"token constant\">ProductReport</span><span class=\"token punctuation\">.</span>checked<span class=\"token punctuation\">.</span>where<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ISNULL(product_id)\"</span><span class=\"token punctuation\">)</span>\n</code></pre>"
      },
      {
          "title": "用数组分页",
          "content": "<pre class=\"language-rb\"><code>    <span class=\"token constant\">Kaminari</span><span class=\"token punctuation\">.</span>paginate_array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> total_count<span class=\"token punctuation\">:</span> <span class=\"token number\">145</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>page<span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">[</span><span class=\"token symbol\">:page</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>per<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n</code></pre>"
      },
      {
          "title": "数组去nil",
          "content": "<pre class=\"language-rb\"><code>    array<span class=\"token punctuation\">.</span>compact  \n</code></pre>"
      },
      {
          "title": "将二维数组站位一维数组",
          "content": "<pre class=\"language-rb\"><code>    <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>flatten\n</code></pre>"
      },
      {
          "title": "distinct用法（去除重复）",
          "content": "<pre class=\"language-rb\"><code>    select<span class=\"token punctuation\">(</span><span class=\"token string\">'distinct products.brand_id, products.brand_name'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span><span class=\"token operator\">/</span>必须放在开头\n</code></pre>"
      },
      {
          "title": "respond_to",
          "content": "<pre class=\"language-text\"><code>    respond_to do |format|\n      format.html\n      format.xml {render :xml =&gt; @item.to_xml}\n    end\n</code></pre>"
      },
      {
          "title": "联合唯一判断",
          "content": "<pre class=\"language-rb\"><code> validates_uniqueness_of <span class=\"token symbol\">:catalog_id</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:scope</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span><span class=\"token symbol\">:brand_id</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:scope</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token symbol\">:emall_id</span><span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">:</span> <span class=\"token string\">\"品牌、品目、电商不能重复\"</span>\n联合唯一索引\n  add_index <span class=\"token symbol\">:brand_catalogs</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token symbol\">:catalog_id</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:brand_id</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:emall_id</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"brand_catalog_emall\"</span><span class=\"token punctuation\">,</span>unique<span class=\"token punctuation\">:</span> <span class=\"token keyword\">true</span>\n</code></pre>"
      },
      {
          "title": "抓取网页信息并写入文件",
          "content": "<pre class=\"language-rb\"><code> <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span><span class=\"token function\">open_page</span></span>\n     arr_script <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n     arr_body <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n     path <span class=\"token operator\">=</span> <span class=\"token string\">\"F:/test.txt\"</span>  <span class=\"token comment\">#将获取到的内容保存到一个文件里</span>\n     ur <span class=\"token operator\">=</span> <span class=\"token string\">\"http://baidu.com/\"</span> <span class=\"token comment\">#打开huawei日本的官网</span>\n       f <span class=\"token operator\">=</span> open<span class=\"token punctuation\">(</span>ur<span class=\"token punctuation\">)</span>\n     <span class=\"token keyword\">if</span> f<span class=\"token punctuation\">.</span>charset <span class=\"token operator\">==</span> <span class=\"token string\">\"iso-8859-1\"</span>\n       charset <span class=\"token operator\">=</span> <span class=\"token keyword\">nil</span>\n     <span class=\"token keyword\">else</span>\n       charset <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>charset\n     <span class=\"token keyword\">end</span>\n     str <span class=\"token operator\">=</span> <span class=\"token constant\">Nokogiri</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">HTML</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">,</span><span class=\"token keyword\">nil</span><span class=\"token punctuation\">,</span>charset<span class=\"token punctuation\">)</span> <span class=\"token comment\">#使用Nokogiri::HTML打开上面的网页</span>\n     str<span class=\"token punctuation\">.</span>encoding <span class=\"token operator\">=</span> <span class=\"token string\">\"UTF-8\"</span>  <span class=\"token comment\">#将编码转化为UTF-8形式</span>\n     <span class=\"token constant\">FileUtils</span><span class=\"token punctuation\">.</span>mkdir_p<span class=\"token punctuation\">(</span><span class=\"token builtin\">File</span><span class=\"token punctuation\">.</span>dirname<span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">unless</span> <span class=\"token builtin\">Dir</span><span class=\"token punctuation\">.</span>exist<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">File</span><span class=\"token punctuation\">.</span>dirname<span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n     script <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">\"//script\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>text  <span class=\"token comment\">#获取script的内容</span>\n     script <span class=\"token operator\">=</span> script<span class=\"token punctuation\">.</span>delete<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">)</span>\n     arr_script <span class=\"token operator\">=</span> script<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#处理掉空格、换行</span>\n     arr_script<span class=\"token punctuation\">.</span>delete<span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\">#形成一个数组，删除数组中的空元素</span>\n     body <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">\"//body\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>text  <span class=\"token comment\">#获取网页的body内容，</span>\n     body <span class=\"token operator\">=</span> body<span class=\"token punctuation\">.</span>delete<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">)</span>\n     arr_body <span class=\"token operator\">=</span> body<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span>\n     arr_body<span class=\"token punctuation\">.</span>delete<span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">#和上面的操作一样</span>\n     <span class=\"token builtin\">File</span><span class=\"token punctuation\">.</span>open<span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span><span class=\"token string\">\"w\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token operator\">|</span>f<span class=\"token operator\">|</span>\n     arr_script<span class=\"token punctuation\">.</span><span class=\"token keyword\">each</span> <span class=\"token keyword\">do</span> <span class=\"token operator\">|</span>str<span class=\"token operator\">|</span>\n       arr_body<span class=\"token punctuation\">.</span>delete<span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span>   <span class=\"token comment\">#找出arr_script中的每个元素和arr_body对比，如果相同，则删除</span>\n     <span class=\"token keyword\">end</span>\n     f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>arr_body<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">#将arr_body写到文件中</span>\n     <span class=\"token punctuation\">}</span>\n   <span class=\"token keyword\">end</span> \n</code></pre>"
      },
      {
          "title": "连接另一个数据库",
          "content": "<pre class=\"language-rb\"><code><span class=\"token keyword\">class</span> <span class=\"token class-name\">DatabaseConnection</span> <span class=\"token operator\">&lt;</span> <span class=\"token constant\">ActiveRecord</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">Base</span>\n  <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>abstract_class <span class=\"token operator\">=</span> <span class=\"token keyword\">true</span>    <span class=\"token comment\">#共用连接池，减少数据库连接的消耗</span>\n  establish_connection <span class=\"token symbol\">:typo</span> <span class=\"token keyword\">if</span> <span class=\"token constant\">Rails</span><span class=\"token punctuation\">.</span>env <span class=\"token operator\">==</span> <span class=\"token string\">'production'</span>  <span class=\"token comment\">#DatabaseCnf是一个类，它用来读取database.yml配置。</span>\n<span class=\"token keyword\">end</span>\n</code></pre>"
      },
      {
          "title": "数组转换成hash",
          "content": "<pre class=\"language-rb\"><code><span class=\"token builtin\">Array</span><span class=\"token punctuation\">.</span>inject<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token operator\">|</span>h<span class=\"token punctuation\">,</span>info<span class=\"token operator\">|</span>h<span class=\"token punctuation\">[</span>info<span class=\"token punctuation\">.</span>demand_id<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>info<span class=\"token punctuation\">.</span>demand_show<span class=\"token punctuation\">;</span>h<span class=\"token punctuation\">}</span>\n</code></pre>"
      },
      {
          "title": "随机数",
          "content": "<pre class=\"language-rb\"><code>rand<span class=\"token punctuation\">(</span><span class=\"token number\">3000</span><span class=\"token operator\">-</span><span class=\"token punctuation\">(</span><span class=\"token number\">3000</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token number\">3000</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n</code></pre>"
      },
      {
          "title": "限制文件大小",
          "content": "<pre class=\"language-rb\"><code> <span class=\"token comment\"># 文件附件</span>\n  mount_uploader <span class=\"token symbol\">:org_code_pic</span><span class=\"token punctuation\">,</span>   <span class=\"token constant\">ImageUploader</span>   <span class=\"token comment\"># 组织机构代码</span>\n  mount_uploader <span class=\"token symbol\">:license_pic</span><span class=\"token punctuation\">,</span>    <span class=\"token constant\">ImageUploader</span>   <span class=\"token comment\"># 营业执照扫描件</span>\n  mount_uploader <span class=\"token symbol\">:tax_pic</span><span class=\"token punctuation\">,</span>        <span class=\"token constant\">ImageUploader</span>   <span class=\"token comment\"># 税务登记证扫描件</span>\n  mount_uploader <span class=\"token symbol\">:legal_code_pic</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">ImageUploader</span>   <span class=\"token comment\"># 单位法人身份证扫描件</span>\n  mount_uploader <span class=\"token symbol\">:reg_pic</span><span class=\"token punctuation\">,</span>        <span class=\"token constant\">ImageUploader</span>   <span class=\"token comment\"># 注册资料带公章扫描件</span>\n  mount_uploader <span class=\"token symbol\">:logo_pic</span><span class=\"token punctuation\">,</span>       <span class=\"token constant\">ImageUploader</span>   <span class=\"token comment\"># 代理机构的logo</span>\n\n  validate <span class=\"token symbol\">:file_size</span>\n\n  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">file_size</span></span>\n    <span class=\"token punctuation\">[</span><span class=\"token symbol\">:org_code_pic</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:license_pic</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:tax_pic</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:legal_code_pic</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:reg_pic</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:logo_pic</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">each</span> <span class=\"token keyword\">do</span> <span class=\"token operator\">|</span>file<span class=\"token operator\">|</span>\n      <span class=\"token keyword\">if</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>file <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>file<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">.</span>to_f<span class=\"token operator\">/</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">500</span>\n        errors<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">,</span> <span class=\"token string\">\"你上传的文件不能大于500K\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">end</span>\n    <span class=\"token keyword\">end</span>\n  <span class=\"token keyword\">end</span>\n</code></pre>"
      },
      {
          "title": "国际化",
          "content": "<pre class=\"language-rb\"><code>model<span class=\"token punctuation\">.</span>human_attribute_name\n</code></pre>"
      },
      {
          "title": "按字母数组顺序生成编号",
          "content": "<pre class=\"language-rb\"><code><span class=\"token comment\">#生成报价公示编号</span>\n<span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span><span class=\"token function\">generate_bid_code</span></span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>size <span class=\"token operator\">%</span> <span class=\"token number\">99</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span>\n    <span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token delimiter tag\">#{</span><span class=\"token punctuation\">(</span><span class=\"token string\">'A'</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token string\">'Z'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to_a<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>size<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">99</span><span class=\"token punctuation\">]</span><span class=\"token delimiter tag\">}</span></span><span class=\"token interpolation\"><span class=\"token delimiter tag\">#{</span><span class=\"token string\">'%02d'</span><span class=\"token operator\">%</span><span class=\"token number\">99</span><span class=\"token delimiter tag\">}</span></span>\"</span>  \n  <span class=\"token keyword\">else</span>\n    <span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token delimiter tag\">#{</span><span class=\"token punctuation\">(</span><span class=\"token string\">'A'</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token string\">'Z'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to_a<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>size<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">99</span><span class=\"token punctuation\">]</span><span class=\"token delimiter tag\">}</span></span><span class=\"token interpolation\"><span class=\"token delimiter tag\">#{</span><span class=\"token string\">'%02d'</span><span class=\"token string\">%(size%99)</span><span class=\"token delimiter tag\">}</span></span>\"</span>\n  <span class=\"token keyword\">end</span>  \n<span class=\"token keyword\">end</span>\n</code></pre>"
      },
      {
          "title": "select2与validate",
          "content": "<pre class=\"language-erb\"><code> <span class=\"token erb language-erb\"><span class=\"token delimiter punctuation\">&lt;%=</span> text_field_tag <span class=\"token string\">'brand_id_pseudo'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">@store</span><span class=\"token punctuation\">.</span>brand_catalog<span class=\"token punctuation\">.</span>try<span class=\"token punctuation\">(</span><span class=\"token symbol\">:brand_id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span><span class=\"token punctuation\">:</span> <span class=\"token string\">' validate[required] pseudo-input'</span> <span class=\"token delimiter punctuation\">%&gt;</span></span>\n <span class=\"token erb language-erb\"><span class=\"token delimiter punctuation\">&lt;%=</span> select_tag <span class=\"token symbol\">:brand_id</span><span class=\"token punctuation\">,</span>options_for_select<span class=\"token punctuation\">(</span><span class=\"token variable\">@brand_catalogs</span><span class=\"token punctuation\">.</span>pluck<span class=\"token punctuation\">(</span><span class=\"token symbol\">:brand_name</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:brand_id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>uniq<span class=\"token punctuation\">,</span><span class=\"token variable\">@store</span><span class=\"token punctuation\">.</span>brand_catalog<span class=\"token punctuation\">.</span>try<span class=\"token punctuation\">(</span><span class=\"token symbol\">:brand_id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{</span>prompt<span class=\"token punctuation\">:</span> <span class=\"token string\">\"请选择\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"select2\"</span> <span class=\"token punctuation\">}</span><span class=\"token delimiter punctuation\">%&gt;</span></span>\n</code></pre>"
      },
      {
          "title": "Ruby Ruby 安全调用运算符",
          "content": "<pre class=\"language-rb\"><code>account <span class=\"token operator\">=</span> <span class=\"token constant\">Account</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">new</span><span class=\"token punctuation\">(</span>owner<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Object</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">new</span><span class=\"token punctuation\">)</span>\n\naccount<span class=\"token punctuation\">.</span>owner<span class=\"token punctuation\">.</span>address\n<span class=\"token comment\"># =&gt; NoMethodError: undefined method `address' for #&lt;Object:0x00559996b5bde8&gt;</span>\n\naccount <span class=\"token operator\">&amp;&amp;</span> account<span class=\"token punctuation\">.</span>owner <span class=\"token operator\">&amp;&amp;</span> account<span class=\"token punctuation\">.</span>owner<span class=\"token punctuation\">.</span>address\n<span class=\"token comment\"># =&gt; NoMethodError: undefined method `address' for #&lt;Object:0x00559996b5bde8&gt;`</span>\n\naccount<span class=\"token punctuation\">.</span>try<span class=\"token punctuation\">(</span><span class=\"token symbol\">:owner</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>try<span class=\"token punctuation\">(</span><span class=\"token symbol\">:address</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># =&gt; nil</span>\n\naccount<span class=\"token operator\">&amp;</span><span class=\"token punctuation\">.</span>owner<span class=\"token operator\">&amp;</span><span class=\"token punctuation\">.</span>address\n<span class=\"token comment\"># =&gt; NoMethodError: undefined method `address' for #&lt;Object:0x00559996b5bde8&gt;`</span>\n</code></pre>"
      },
      {
          "title": "Array#dig and Hash#dig",
          "content": "<pre class=\"language-rb\"><code><span class=\"token comment\">#我们再也不用写下面这样恶心的代码：</span>\n\naddress <span class=\"token operator\">=</span> params<span class=\"token punctuation\">[</span><span class=\"token symbol\">:account</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>try<span class=\"token punctuation\">(</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:owner</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>try<span class=\"token punctuation\">(</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:address</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># or</span>\n\naddress <span class=\"token operator\">=</span> params<span class=\"token punctuation\">[</span><span class=\"token symbol\">:account</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fetch<span class=\"token punctuation\">(</span><span class=\"token symbol\">:owner</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">.</span>fetch<span class=\"token punctuation\">(</span><span class=\"token symbol\">:address</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#只需简单的使用Hash#dig来达到同样的目的：</span>\n\naddress <span class=\"token operator\">=</span> params<span class=\"token punctuation\">.</span>dig<span class=\"token punctuation\">(</span><span class=\"token symbol\">:account</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:owner</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:address</span><span class=\"token punctuation\">)</span>\n</code></pre>"
      },
      {
          "title": "ajax 加载select2数据",
          "content": "<pre class=\"language-erb\"><code> <span class=\"token erb language-erb\"><span class=\"token delimiter punctuation\">&lt;%=</span> f<span class=\"token punctuation\">.</span>text_field <span class=\"token symbol\">:brand_id</span><span class=\"token punctuation\">,</span>  <span class=\"token keyword\">class</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'select_opt select2 w300'</span> <span class=\"token operator\">%</span>\n <span class=\"token operator\">&lt;</span><span class=\"token operator\">%</span><span class=\"token operator\">=</span> hidden_field_tag <span class=\"token symbol\">:brand_name</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">@product</span><span class=\"token punctuation\">.</span>brand<span class=\"token operator\">&amp;</span><span class=\"token punctuation\">.</span>name <span class=\"token delimiter punctuation\">%&gt;</span></span>\n</code></pre>"
      },
      {
          "title": "生成pdf无背景图片问题",
          "content": "<pre class=\"language-erb\"><code><span class=\"token erb language-erb\"><span class=\"token delimiter punctuation\">&lt;%=</span><span class=\"token constant\">Rails</span><span class=\"token punctuation\">.</span>root<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token string\">'app/assets/images/'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'watermark.png'</span><span class=\"token punctuation\">)</span><span class=\"token delimiter punctuation\">%&gt;</span></span>//需要写绝对路径\n</code></pre>"
      },
      {
          "title": "a链接支持method方法",
          "content": "<pre class=\"language-rb\"><code><span class=\"token operator\">/</span><span class=\"token operator\">/</span><span class=\"token operator\">=</span> <span class=\"token keyword\">require</span> jquery_ujs\n</code></pre>"
      },
      {
          "title": "cas 单点登录",
          "content": "<pre class=\"language-rb\"><code><span class=\"token number\">0.</span> 在 <span class=\"token constant\">Gemfile</span>中，加入：\n\ngem <span class=\"token string\">'rubycas-client'</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:git</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">'git://github.com/rubycas/rubycas-client.git'</span>      <span class=\"token comment\">#(要用这个版本,否则 会出现undefine method before ...) </span>\n\n<span class=\"token number\">1.</span> environment<span class=\"token punctuation\">.</span>rb<span class=\"token punctuation\">:</span> 的结尾，加上：\n\n<span class=\"token constant\">CASClient</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">Frameworks</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">Rails</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">Filter</span><span class=\"token punctuation\">.</span>configure<span class=\"token punctuation\">(</span>\n<span class=\"token symbol\">:cas_base_url</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">\"http://10.103.13.121:333\"</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token number\">2</span> 对应的controller 中， 加上：\n\nbefore_filter <span class=\"token constant\">CASClient</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">Frameworks</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">Rails</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">Filter</span>\n\n<span class=\"token comment\">#注意： 不要在 application_controller中加这句。否则的话所有的controller, 包括登录页面都会受影响。</span>\n\n<span class=\"token comment\">#注意2:  在  &gt;  4.2的版本中, 要把 before_filter 换成 before_action</span>\n\n<span class=\"token comment\">#注意3:  有了这一句,就不用原来的   before_action :auth_user  等等这样的用法了. (就是去掉devise 的验证)</span>\n\n\n<span class=\"token number\">3.</span> 在sessions_controller<span class=\"token punctuation\">.</span>rb 中定义退出的action<span class=\"token punctuation\">:</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">SessionsController</span> <span class=\"token operator\">&lt;</span> <span class=\"token constant\">ApplicationController</span>\n<span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">destroy</span></span>\n<span class=\"token constant\">CASClient</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">Frameworks</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">Rails</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">Filter</span><span class=\"token punctuation\">.</span>logout<span class=\"token punctuation\">(</span><span class=\"token keyword\">self</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span>\n<span class=\"token number\">4.</span> 修改 route<span class=\"token punctuation\">.</span>rb ，加入退出的链接：\n\n<span class=\"token constant\">PaddyField</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">Application</span><span class=\"token punctuation\">.</span>routes<span class=\"token punctuation\">.</span>draw <span class=\"token keyword\">do</span>\nresources <span class=\"token symbol\">:fish</span>\nmatch <span class=\"token string\">'/logout'</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">\"sessions#destroy\"</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:as</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token symbol\">:logout</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:via</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token symbol\">:delete</span>\n<span class=\"token keyword\">end</span> \n\n<span class=\"token number\">5.</span> 修改 application<span class=\"token punctuation\">.</span>html<span class=\"token punctuation\">.</span>erb 布局文件，增加这个链接。\n\n<span class=\"token comment\">#关键的一点是： 在经典的 authorization 框架用，都是用 current_user 这个变量取得当前登陆的用户。 在CAS CLIENT中，用的是 session[:cas_user] , 只取得当前用户名，是一个string. 而不是一个model.</span>\n\n<span class=\"token operator\">&lt;</span>div style<span class=\"token operator\">=</span><span class=\"token string\">\"border: 1px solid green\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token string\">%= session[:cas_user] %&gt; \n&lt;/div&gt;\n&lt;% if session[:cas_user] %&gt;\n    &lt;%=</span> link_to <span class=\"token string\">\"logout\"</span> <span class=\"token punctuation\">,</span> logout_path <span class=\"token string\">%&gt; \n&lt;% end %&gt;</span>\n</code></pre>"
      },
      {
          "title": "include? or exclude?",
          "content": "<pre class=\"language-text\"><code>  $ [1,2,3,4].include? 3 =&gt; true\n  $ [1,2,3,4].exclude? 5 =&gt; true\n</code></pre>"
      },
      {
          "title": "ec全文检索超出条数",
          "content": "<pre class=\"language-text\"><code>curl -XPUT http://127.0.0.1:9200/products_development/_settings -d '{ \"index\" : { \"max_result_window\" : 100000000}}'\n</code></pre>"
      },
      {
          "title": "其他实用的方法",
          "content": "<pre class=\"language-rb\"><code>\npluralize方法可以帮我们将名词字串转为复数的名词<span class=\"token punctuation\">:</span>\n\n<span class=\"token string\">\"table\"</span><span class=\"token punctuation\">.</span>pluralize     <span class=\"token comment\"># =&gt; \"tables\"</span>\n<span class=\"token string\">\"ruby\"</span><span class=\"token punctuation\">.</span>pluralize      <span class=\"token comment\"># =&gt; \"rubies\"</span>\n<span class=\"token string\">\"equipment\"</span><span class=\"token punctuation\">.</span>pluralize <span class=\"token comment\"># =&gt; \"equipment\"</span>\n而singularize方法则是可以帮我们转为单数<span class=\"token punctuation\">:</span>\n\n<span class=\"token string\">\"tables\"</span><span class=\"token punctuation\">.</span>singularize    <span class=\"token comment\"># =&gt; \"table\"</span>\n<span class=\"token string\">\"rubies\"</span><span class=\"token punctuation\">.</span>singularize    <span class=\"token comment\"># =&gt; \"ruby\"</span>\n<span class=\"token string\">\"equipment\"</span><span class=\"token punctuation\">.</span>singularize <span class=\"token comment\"># =&gt; \"equipment\"</span>\ncamelize可以帮我们将字串转为驼峰式的字串<span class=\"token punctuation\">:</span>\n\n<span class=\"token string\">\"product\"</span><span class=\"token punctuation\">.</span>camelize    <span class=\"token comment\"># =&gt; \"Product\"</span>\n<span class=\"token string\">\"admin_user\"</span><span class=\"token punctuation\">.</span>camelize <span class=\"token comment\"># =&gt; \"AdminUser\"</span>\n在<span class=\"token constant\">Rails</span>中也会将路径中”<span class=\"token operator\">/</span>”符号转为<span class=\"token builtin\">Class</span>及<span class=\"token builtin\">Module</span>中的命名空间符号<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>\n\n<span class=\"token string\">\"backoffice/session\"</span><span class=\"token punctuation\">.</span>camelize <span class=\"token comment\"># =&gt; \"Backoffice::Session\"</span>\n而underscore则是将原先驼峰式的字串转为路径式的字串<span class=\"token punctuation\">:</span>\n\n<span class=\"token string\">\"Product\"</span><span class=\"token punctuation\">.</span>underscore   <span class=\"token comment\"># =&gt; \"product\"</span>\n<span class=\"token string\">\"AdminUser\"</span><span class=\"token punctuation\">.</span>underscore <span class=\"token comment\"># =&gt; \"admin_user\"</span>\n<span class=\"token string\">\"Backoffice::Session\"</span><span class=\"token punctuation\">.</span>underscore <span class=\"token comment\"># =&gt; \"backoffice/session\"</span>\ntitleize方法可以将字串标题化，将单字的开头皆转为大写<span class=\"token punctuation\">:</span>\n\n<span class=\"token string\">\"alice in wonderland\"</span><span class=\"token punctuation\">.</span>titleize <span class=\"token comment\"># =&gt; \"Alice In Wonderland\"</span>\n<span class=\"token string\">\"fermat's enigma\"</span><span class=\"token punctuation\">.</span>titleize     <span class=\"token comment\"># =&gt; \"Fermat's Enigma\"</span>\ndasherize可以将字串中的底线转为横线<span class=\"token punctuation\">:</span>\n\n<span class=\"token string\">\"name\"</span><span class=\"token punctuation\">.</span>dasherize         <span class=\"token comment\"># =&gt; \"name\"</span>\n<span class=\"token string\">\"contact_data\"</span><span class=\"token punctuation\">.</span>dasherize <span class=\"token comment\"># =&gt; \"contact-data\"</span>\ndemodulize可以将整串的namespace去除仅留下最后的<span class=\"token builtin\">Class</span> <span class=\"token class-name\">name</span>或是<span class=\"token builtin\">Module</span> name<span class=\"token punctuation\">:</span>\n\n<span class=\"token string\">\"Backoffice::UsersController\"</span><span class=\"token punctuation\">.</span>demodulize    <span class=\"token comment\"># =&gt; \"UsersController\"</span>\n<span class=\"token string\">\"Admin::Hotel::ReservationUtils\"</span><span class=\"token punctuation\">.</span>demodulize <span class=\"token comment\"># =&gt; \"ReservationUtils\"</span>\ndeconstantize则是相反的作用，将上层的部分全部找出来<span class=\"token punctuation\">:</span>\n\n<span class=\"token string\">\"Backoffice::UsersController\"</span><span class=\"token punctuation\">.</span>deconstantize    <span class=\"token comment\"># =&gt; \"Backoffice\"</span>\n<span class=\"token string\">\"Admin::Hotel::ReservationUtils\"</span><span class=\"token punctuation\">.</span>deconstantize <span class=\"token comment\"># =&gt; \"Admin::Hotel\"</span>\n必须注意的是这是处理字串，因此若直接仅给予<span class=\"token builtin\">Class</span> <span class=\"token class-name\">name</span>或是<span class=\"token builtin\">Module</span> name是无法找出上层参照的\n\n<span class=\"token string\">\"Product\"</span><span class=\"token punctuation\">.</span>deconstantize  <span class=\"token comment\"># =&gt; \"\"</span>\nparameterize可以将字串转为适合url的方式<span class=\"token punctuation\">:</span>\n\n<span class=\"token string\">\"John Smith\"</span><span class=\"token punctuation\">.</span>parameterize <span class=\"token comment\"># =&gt; \"john-smith\"</span>\n<span class=\"token string\">\"Kurt Gödel\"</span><span class=\"token punctuation\">.</span>parameterize <span class=\"token comment\"># =&gt; \"kurt-godel\"</span>\ntableize除了会将单数名词转为复数之外，还会将驼峰式的名词改为底线<span class=\"token punctuation\">:</span>\n\n<span class=\"token string\">\"InvoiceLine\"</span><span class=\"token punctuation\">.</span>tableize <span class=\"token comment\"># =&gt; \"invoice_lines\"</span>\ntableize的作用其实在于帮助你找出<span class=\"token constant\">Model</span>的资料表名称\n\nclassify则是tableize的相反，能够帮你从资料表的名称转为<span class=\"token constant\">Model</span><span class=\"token punctuation\">:</span>\n\n<span class=\"token string\">\"people\"</span><span class=\"token punctuation\">.</span>classify        <span class=\"token comment\"># =&gt; \"Person\"</span>\n<span class=\"token string\">\"invoices\"</span><span class=\"token punctuation\">.</span>classify      <span class=\"token comment\"># =&gt; \"Invoice\"</span>\n<span class=\"token string\">\"invoice_lines\"</span><span class=\"token punctuation\">.</span>classify <span class=\"token comment\"># =&gt; \"InvoiceLine\"</span>\nhumanize可以帮你将<span class=\"token constant\">Model</span>的属性转为较容易阅读的形式<span class=\"token punctuation\">:</span>\n\n<span class=\"token string\">\"name\"</span><span class=\"token punctuation\">.</span>humanize           <span class=\"token comment\"># =&gt; \"Name\"</span>\n<span class=\"token string\">\"author_id\"</span><span class=\"token punctuation\">.</span>humanize      <span class=\"token comment\"># =&gt; \"Author\"</span>\n<span class=\"token string\">\"comments_count\"</span><span class=\"token punctuation\">.</span>humanize <span class=\"token comment\"># =&gt; \"Comments count\"</span>\nclazz<span class=\"token punctuation\">.</span>camelize<span class=\"token punctuation\">.</span>constantize<span class=\"token punctuation\">.</span>const_get<span class=\"token punctuation\">(</span><span class=\"token symbol\">:STATE</span><span class=\"token punctuation\">)</span>\n获取常量\n</code></pre>"
      },
      {
          "title": "index_by",
          "content": "<pre class=\"language-rb\"><code>index_by可以帮我们将集合元素以指定的字段做为键值整理成<span class=\"token builtin\">Hash</span><span class=\"token punctuation\">:</span>\n\ninvoices<span class=\"token punctuation\">.</span>index_by<span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token symbol\">:number</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># =&gt; {'2009-032' =&gt; &lt;Invoice ...&gt;, '2009-008' =&gt; &lt;Invoice ...&gt;, ...}</span>\n键值通常必须是唯一的，若不是唯一的话将会以最后出现的元素做为判断值。\n</code></pre>"
      },
      {
          "title": "many?",
          "content": "<pre class=\"language-erb\"><code>#many?是可个好用的方法可以帮助我们快速的判断集合的数量是否大于1:\n\n<span class=\"token erb language-erb\"><span class=\"token delimiter punctuation\">&lt;%</span> <span class=\"token keyword\">if</span> pages<span class=\"token punctuation\">.</span>many<span class=\"token operator\">?</span> <span class=\"token delimiter punctuation\">%&gt;</span></span>\n  <span class=\"token erb language-erb\"><span class=\"token delimiter punctuation\">&lt;%=</span> pagination_links <span class=\"token delimiter punctuation\">%&gt;</span></span>\n<span class=\"token erb language-erb\"><span class=\"token delimiter punctuation\">&lt;%</span> <span class=\"token keyword\">end</span> <span class=\"token delimiter punctuation\">%&gt;</span></span>\n如果对many?传入区块运算时，many?仅会回传运算结果是true的结果:\n\n@see_more = videos.many? {|video| video.category == params[:category]}\n</code></pre>"
      },
      {
          "title": "扩充 Array",
          "content": "<pre class=\"language-rb\"><code>shape_type <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"Circle\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Square\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Triangle\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>sample\n<span class=\"token comment\"># =&gt; Square, for example</span>\n\nshape_types <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"Circle\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Square\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Triangle\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>sample<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># =&gt; [\"Triangle\", \"Circle\"], for example</span>\n</code></pre>"
      },
      {
          "title": "Key 键值",
          "content": "<pre class=\"language-rb\"><code>except与except<span class=\"token operator\">!</span>\nexcept方法可以将指定的键值从hash中移除<span class=\"token punctuation\">:</span>\n\n<span class=\"token punctuation\">{</span><span class=\"token symbol\">:a</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:b</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">.</span>except<span class=\"token punctuation\">(</span><span class=\"token symbol\">:a</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># =&gt; {:b =&gt; 2}</span>\nexcept通常用在我们更新资料时对一些不想被更改的资料字段做保护的动作<span class=\"token punctuation\">:</span>\n\nparams<span class=\"token punctuation\">[</span><span class=\"token symbol\">:account</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> params<span class=\"token punctuation\">[</span><span class=\"token symbol\">:account</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>except<span class=\"token punctuation\">(</span><span class=\"token symbol\">:plan_id</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">unless</span> admin<span class=\"token operator\">?</span>\n<span class=\"token variable\">@account</span><span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">[</span><span class=\"token symbol\">:account</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nexcept<span class=\"token operator\">!</span>会直接更改原本呼叫的hash而不是产生一个新的hash\n\nstringify_keys 与 stringify_keys<span class=\"token operator\">!</span>\nstringify_keys可以将hash中的键值改为字串<span class=\"token punctuation\">:</span>\n\n<span class=\"token punctuation\">{</span><span class=\"token keyword\">nil</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token keyword\">nil</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:a</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token symbol\">:a</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">.</span>stringify_keys\n<span class=\"token comment\"># =&gt; {\"\" =&gt; nil, \"a\" =&gt; :a, \"1\" =&gt; 1}</span>\n如果hash中有冲突发生，则以后者优先<span class=\"token punctuation\">:</span>\n\n<span class=\"token punctuation\">{</span><span class=\"token string\">\"a\"</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:a</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">.</span>stringify_keys\n<span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"a\"</span><span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span><span class=\"token number\">2</span><span class=\"token punctuation\">}</span>\n这方法方便我们将传入的hash做一致性的处理，而不用去考虑使用者传入的hash是用symbol或是字串\n\nstringify_keys<span class=\"token operator\">!</span>的版本会直接更改呼叫的hash值\n\nsymbolize_keys与symbolize_keys<span class=\"token operator\">!</span>\nsymbolize_keys则是会把hash中的键值都呼叫to_sym方法将之改为symbol<span class=\"token punctuation\">:</span>\n\n<span class=\"token punctuation\">{</span><span class=\"token keyword\">nil</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token keyword\">nil</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"a\"</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">.</span>symbolize_keys\n<span class=\"token comment\"># =&gt; {1 =&gt; 1, nil =&gt; nil, :a =&gt; \"a\"}</span>\n如果hash中有冲突发生，以后面的优先<span class=\"token punctuation\">:</span>\n\n<span class=\"token punctuation\">{</span><span class=\"token string\">\"a\"</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:a</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">.</span>symbolize_keys\n<span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span><span class=\"token symbol\">:a</span><span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span><span class=\"token number\">2</span><span class=\"token punctuation\">}</span>\nsymbolize_keys<span class=\"token operator\">!</span>版本会直接更改呼叫的hash值\n\nto_options与to_options<span class=\"token operator\">!</span>\nto_options与to_options<span class=\"token operator\">!</span>方法作用与symbolize_keys方法是一样的\n\nassert_valid_keys\nassert_valid_keys是用来指定hash键值的白名单，没有在白名单里的键值出现在hash中都会抛出例外<span class=\"token punctuation\">:</span>\n\n<span class=\"token punctuation\">{</span><span class=\"token symbol\">:a</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">.</span>assert_valid_keys<span class=\"token punctuation\">(</span><span class=\"token symbol\">:a</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># =&gt; {:a=&gt;1}</span>\n<span class=\"token punctuation\">{</span><span class=\"token symbol\">:a</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">.</span>assert_valid_keys<span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># ArgumentError: Unknown key: a</span>\n分割 <span class=\"token builtin\">Hash</span>\nslice方法可以帮我们从hash中切出指定的值<span class=\"token punctuation\">:</span>\n\n<span class=\"token punctuation\">{</span><span class=\"token symbol\">:a</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:b</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:c</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">.</span>slice<span class=\"token punctuation\">(</span><span class=\"token symbol\">:a</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:c</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># =&gt; {:c =&gt; 3, :a =&gt; 1}</span>\n\n<span class=\"token punctuation\">{</span><span class=\"token symbol\">:a</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:b</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:c</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">.</span>slice<span class=\"token punctuation\">(</span><span class=\"token symbol\">:b</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:X</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># =&gt; {:b =&gt; 2} # 不存在的值会被忽略</span>\n这方法也常用来做为检验hash的白名单使用，将核可的值从hash中抽出\n\nslice<span class=\"token operator\">!</span>的版本会直接更改呼叫的hash值\n</code></pre>"
      },
      {
          "title": "扩充 DateTime",
          "content": "<pre class=\"language-rb\"><code><span class=\"token constant\">DateTime</span>本身已经写好很多实用的方法可以方便我们计算时间<span class=\"token punctuation\">:</span>\n\nyesterday\ntomorrow\nbeginning_of_week <span class=\"token punctuation\">(</span>at_beginning_of_week<span class=\"token punctuation\">)</span>\nend_of_week <span class=\"token punctuation\">(</span>at_end_of_week<span class=\"token punctuation\">)</span>\nmonday\nsunday\nweeks_ago\nprev_week\nnext_week\nmonths_ago\nmonths_since\nbeginning_of_month <span class=\"token punctuation\">(</span>at_beginning_of_month<span class=\"token punctuation\">)</span>\nend_of_month <span class=\"token punctuation\">(</span>at_end_of_month<span class=\"token punctuation\">)</span>\nprev_month\nnext_month\nbeginning_of_quarter <span class=\"token punctuation\">(</span>at_beginning_of_quarter<span class=\"token punctuation\">)</span>\nend_of_quarter <span class=\"token punctuation\">(</span>at_end_of_quarter<span class=\"token punctuation\">)</span>\nbeginning_of_year <span class=\"token punctuation\">(</span>at_beginning_of_year<span class=\"token punctuation\">)</span>\nend_of_year <span class=\"token punctuation\">(</span>at_end_of_year<span class=\"token punctuation\">)</span>\nyears_ago\nyears_since\nprev_year\nnext_year\n<span class=\"token constant\">DateTime</span>并不支援日光节约时间\n\n<span class=\"token constant\">DateTime</span><span class=\"token punctuation\">.</span>current类似于 <span class=\"token builtin\">Time</span><span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">.</span>to_datetime，但他的结果会依使用者本身的时区而定，如果在时区有设定的情况下，还会有些其他好用的方法像是<span class=\"token constant\">DateTime</span><span class=\"token punctuation\">.</span>yesterday、<span class=\"token constant\">DateTime</span><span class=\"token punctuation\">.</span>tomorrow，也可以使用像是past<span class=\"token operator\">?</span>及future<span class=\"token operator\">?</span>来与<span class=\"token constant\">DateTime</span><span class=\"token punctuation\">.</span>current做判断\n\nseconds_since_midnight会回传从午夜<span class=\"token number\">00</span><span class=\"token punctuation\">:</span><span class=\"token number\">00</span><span class=\"token punctuation\">:</span><span class=\"token number\">00</span>到指定时间所经过的秒数<span class=\"token punctuation\">:</span>\n\nnow <span class=\"token operator\">=</span> <span class=\"token constant\">DateTime</span><span class=\"token punctuation\">.</span>current     <span class=\"token comment\"># =&gt; Mon, 07 Jun 2010 20:26:36 +0000</span>\nnow<span class=\"token punctuation\">.</span>seconds_since_midnight <span class=\"token comment\"># =&gt; 73596</span>\nutc可以把时间转为<span class=\"token constant\">UTC</span>格式\n\nnow <span class=\"token operator\">=</span> <span class=\"token constant\">DateTime</span><span class=\"token punctuation\">.</span>current <span class=\"token comment\"># =&gt; Mon, 07 Jun 2010 19:27:52 -0400</span>\nnow<span class=\"token punctuation\">.</span>utc                <span class=\"token comment\"># =&gt; Mon, 07 Jun 2010 23:27:52 +0000</span>\nutc<span class=\"token operator\">?</span>可以判断是否为<span class=\"token constant\">UTC</span>格式\n\nnow <span class=\"token operator\">=</span> <span class=\"token constant\">DateTime</span><span class=\"token punctuation\">.</span>now <span class=\"token comment\"># =&gt; Mon, 07 Jun 2010 19:30:47 -0400</span>\nnow<span class=\"token punctuation\">.</span>utc<span class=\"token operator\">?</span>           <span class=\"token comment\"># =&gt; false</span>\nnow<span class=\"token punctuation\">.</span>utc<span class=\"token punctuation\">.</span>utc<span class=\"token operator\">?</span>       <span class=\"token comment\"># =&gt; true</span>\nadvance是个非常好用的方法，当我们想要找出相对于一个时间加加减减后的另一个时间非常好用<span class=\"token punctuation\">:</span>\n\nd <span class=\"token operator\">=</span> <span class=\"token constant\">DateTime</span><span class=\"token punctuation\">.</span>current\n<span class=\"token comment\"># =&gt; Thu, 05 Aug 2010 11:33:31 +0000</span>\nd<span class=\"token punctuation\">.</span>advance<span class=\"token punctuation\">(</span><span class=\"token symbol\">:years</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:months</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:days</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:hours</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:minutes</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:seconds</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># =&gt; Tue, 06 Sep 2011 12:34:32 +0000</span>\n要注意的是你如果呼叫多次advance去做计算，其结果可能与呼叫一次是有差异的，你可以参考下面的例子<span class=\"token punctuation\">:</span>\n\nd <span class=\"token operator\">=</span> <span class=\"token constant\">DateTime</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">new</span><span class=\"token punctuation\">(</span><span class=\"token number\">2010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28</span><span class=\"token punctuation\">,</span> <span class=\"token number\">23</span><span class=\"token punctuation\">,</span> <span class=\"token number\">59</span><span class=\"token punctuation\">,</span> <span class=\"token number\">59</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># =&gt; Sun, 28 Feb 2010 23:59:59 +0000</span>\nd<span class=\"token punctuation\">.</span>advance<span class=\"token punctuation\">(</span><span class=\"token symbol\">:months</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:seconds</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># =&gt; Mon, 29 Mar 2010 00:00:00 +0000</span>\nd<span class=\"token punctuation\">.</span>advance<span class=\"token punctuation\">(</span><span class=\"token symbol\">:seconds</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>advance<span class=\"token punctuation\">(</span><span class=\"token symbol\">:months</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># =&gt; Thu, 01 Apr 2010 00:00:00 +0000</span>\nchange可以传入参数给指定的时间将它改为我们想要的时间<span class=\"token punctuation\">:</span>\n\nnow <span class=\"token operator\">=</span> <span class=\"token constant\">DateTime</span><span class=\"token punctuation\">.</span>current\n<span class=\"token comment\"># =&gt; Tue, 08 Jun 2010 01:56:22 +0000</span>\nnow<span class=\"token punctuation\">.</span>change<span class=\"token punctuation\">(</span><span class=\"token symbol\">:year</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token number\">2011</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:offset</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token constant\">Rational</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># =&gt; Wed, 08 Jun 2011 01:56:22 -0600 将年份跟时区指定为我们传入的参数</span>\n如果你传入的参数只有hour的时候并且为<span class=\"token number\">0</span>的时候，分钟及秒数都会被设为<span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n\nnow<span class=\"token punctuation\">.</span>change<span class=\"token punctuation\">(</span><span class=\"token symbol\">:hour</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># =&gt; Tue, 08 Jun 2010 00:00:00 +0000</span>\n同样的，如果传入的参数只有min并且值为<span class=\"token number\">0</span>的时候，秒数就会被设为<span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n\nnow<span class=\"token punctuation\">.</span>change<span class=\"token punctuation\">(</span><span class=\"token symbol\">:min</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># =&gt; Tue, 08 Jun 2010 01:00:00 +0000</span>\n<span class=\"token constant\">DateTime</span>也可以方便得用时间间隔来做加减<span class=\"token punctuation\">:</span>\n\nnow <span class=\"token operator\">=</span> <span class=\"token constant\">DateTime</span><span class=\"token punctuation\">.</span>current\n<span class=\"token comment\"># =&gt; Mon, 09 Aug 2010 23:15:17 +0000</span>\nnow <span class=\"token operator\">+</span> <span class=\"token number\">1.</span>year\n<span class=\"token comment\"># =&gt; Tue, 09 Aug 2011 23:15:17 +0000</span>\nnow <span class=\"token operator\">-</span> <span class=\"token number\">1.</span>week\n<span class=\"token comment\"># =&gt; Mon, 02 Aug 2010 23:15:17 +0000</span>\n\n</code></pre>"
      },
      {
          "title": "扩充 Time",
          "content": "<pre class=\"language-rb\"><code><span class=\"token builtin\">Time</span>继承从<span class=\"token constant\">DateTime</span>来很多好用的方法<span class=\"token punctuation\">:</span>\n\npast<span class=\"token operator\">?</span>\ntoday<span class=\"token operator\">?</span>\nfuture<span class=\"token operator\">?</span>\nyesterday\ntomorrow\nseconds_since_midnight\nchange\nadvance\nago\nsince <span class=\"token punctuation\">(</span><span class=\"token keyword\">in</span><span class=\"token punctuation\">)</span>\nbeginning_of_day <span class=\"token punctuation\">(</span>midnight<span class=\"token punctuation\">,</span> at_midnight<span class=\"token punctuation\">,</span> at_beginning_of_day<span class=\"token punctuation\">)</span>\nend_of_day\nbeginning_of_week <span class=\"token punctuation\">(</span>at_beginning_of_week<span class=\"token punctuation\">)</span>\nend_of_week <span class=\"token punctuation\">(</span>at_end_of_week<span class=\"token punctuation\">)</span>\nmonday\nsunday\nweeks_ago\nprev_week\nnext_week\nmonths_ago\nmonths_since\nbeginning_of_month <span class=\"token punctuation\">(</span>at_beginning_of_month<span class=\"token punctuation\">)</span>\nend_of_month <span class=\"token punctuation\">(</span>at_end_of_month<span class=\"token punctuation\">)</span>\nprev_month\nnext_month\nbeginning_of_quarter <span class=\"token punctuation\">(</span>at_beginning_of_quarter<span class=\"token punctuation\">)</span>\nend_of_quarter <span class=\"token punctuation\">(</span>at_end_of_quarter<span class=\"token punctuation\">)</span>\nbeginning_of_year <span class=\"token punctuation\">(</span>at_beginning_of_year<span class=\"token punctuation\">)</span>\nend_of_year <span class=\"token punctuation\">(</span>at_end_of_year<span class=\"token punctuation\">)</span>\nyears_ago\nyears_since\nprev_year\nnext_year\n<span class=\"token builtin\">Time</span>的change方法接受一个额外的参数<span class=\"token symbol\">:usec</span>\n\n<span class=\"token builtin\">Time</span>不同于<span class=\"token constant\">DateTime</span>，是能正确计算出时区间的差异，<span class=\"token constant\">DateTime</span>是不支援时光节约时间的\n\n<span class=\"token builtin\">Time</span><span class=\"token punctuation\">.</span>zone_default\n<span class=\"token comment\"># =&gt; #&lt;ActiveSupport::TimeZone:0x7f73654d4f38 @utc_offset=nil, @name=\"Madrid\", ...&gt;</span>\n\n<span class=\"token comment\"># In Barcelona, 2010/03/28 02:00 +0100 becomes 2010/03/28 03:00 +0200 due to DST.</span>\nt <span class=\"token operator\">=</span> <span class=\"token builtin\">Time</span><span class=\"token punctuation\">.</span>local_time<span class=\"token punctuation\">(</span><span class=\"token number\">2010</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">59</span><span class=\"token punctuation\">,</span> <span class=\"token number\">59</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># =&gt; Sun Mar 28 01:59:59 +0100 2010</span>\nt<span class=\"token punctuation\">.</span>advance<span class=\"token punctuation\">(</span><span class=\"token symbol\">:seconds</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># =&gt; Sun Mar 28 03:00:00 +0200 2010</span>\n使用since或是ago时，如果得到的时间无法用<span class=\"token builtin\">Time</span>来呈现时，会自动转型为<span class=\"token constant\">DateTime</span>\n\n</code></pre>"
      },
      {
          "title": "私有文件显示",
          "content": "<pre class=\"language-rb\"><code><span class=\"token constant\">Controller</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ImagesController</span> <span class=\"token operator\">&lt;</span> <span class=\"token constant\">ApplicationController</span>\n  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">show_image</span></span>\n    image_path <span class=\"token operator\">=</span> <span class=\"token builtin\">File</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token constant\">Rails</span><span class=\"token punctuation\">.</span>root<span class=\"token punctuation\">,</span> params<span class=\"token punctuation\">[</span><span class=\"token symbol\">:path</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># or similar</span>\n    send_file image_path<span class=\"token punctuation\">,</span> disposition<span class=\"token punctuation\">:</span> <span class=\"token string\">'inline'</span><span class=\"token punctuation\">,</span> type<span class=\"token punctuation\">:</span> <span class=\"token string\">'image/jpeg'</span><span class=\"token punctuation\">,</span> x_sendfile<span class=\"token punctuation\">:</span> <span class=\"token keyword\">true</span>\n  <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span>\n<span class=\"token constant\">Routes</span>\n\nget <span class=\"token string\">'/image/:path'</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">:</span> <span class=\"token string\">'images#show_image'</span><span class=\"token punctuation\">,</span> as<span class=\"token punctuation\">:</span> <span class=\"token symbol\">:image</span>\n<span class=\"token constant\">Views</span>\n\nimage_tag image_path<span class=\"token punctuation\">(</span><span class=\"token string\">'path_to_image'</span><span class=\"token punctuation\">)</span>\n</code></pre>"
      },
      {
          "title": "文件遍历",
          "content": "<pre class=\"language-rb\"><code><span class=\"token keyword\">require</span> <span class=\"token string\">\"find\"</span>\n<span class=\"token operator\">&lt;</span>table <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"table table-bordered table-striped table-hover\"</span><span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span>thead<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>tr<span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span>th<span class=\"token operator\">&gt;</span>路径<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>th<span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span>th<span class=\"token operator\">&gt;</span>类别<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>th<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>tr<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>thead<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span>tbody<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">%</span> <span class=\"token constant\">Find</span><span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">'file_uploads/brand_catalog_awards/'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span> <span class=\"token operator\">|</span>path<span class=\"token operator\">|</span> <span class=\"token string\">%&gt;\n       &lt;% kind = if File.file? path\n          \"文件\"\n        else\n          \"文件夹\"\n        end %&gt;</span>\n        <span class=\"token operator\">&lt;</span>tr<span class=\"token operator\">&gt;</span>\n          <span class=\"token operator\">&lt;</span>td<span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token string\">%= path %&gt;&lt;/td&gt;\n          &lt;td&gt;&lt;%=</span> kind <span class=\"token string\">%&gt;(&lt;%= File.size(path%&gt;</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>td<span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>tr<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">%</span> <span class=\"token keyword\">end</span> <span class=\"token string\">%&gt;\n  &lt;/tbody&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>table<span class=\"token operator\">&gt;</span>\n</code></pre>"
      },
      {
          "title": "抓取文件类型对照表",
          "content": "<pre class=\"language-rb\"><code>  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span><span class=\"token function\">snatch_content_types</span></span>\n    <span class=\"token constant\">Rails</span><span class=\"token punctuation\">.</span>logger<span class=\"token punctuation\">.</span>debug<span class=\"token punctuation\">(</span><span class=\"token string\">\"===================开始抓取文件类型关系对照表===================\"</span><span class=\"token punctuation\">)</span>\n    url <span class=\"token operator\">=</span> <span class=\"token string\">\"http://tool.oschina.net/commons\"</span>\n    begin_time <span class=\"token operator\">=</span> <span class=\"token builtin\">Time</span><span class=\"token punctuation\">.</span>now\n    html <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>\n    <span class=\"token keyword\">begin</span>\n      <span class=\"token constant\">Timeout</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>timeout<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span>\n        html <span class=\"token operator\">=</span> open<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>read\n      <span class=\"token keyword\">end</span>\n    <span class=\"token keyword\">rescue</span> <span class=\"token constant\">TimeoutError</span>\n      <span class=\"token constant\">Rails</span><span class=\"token punctuation\">.</span>logger<span class=\"token punctuation\">.</span>debug<span class=\"token punctuation\">(</span><span class=\"token string\">\"===================抓取文件类型关系对照表失败，失败原因：访问超时 url：<span class=\"token interpolation\"><span class=\"token delimiter tag\">#{</span>url<span class=\"token delimiter tag\">}</span></span>===================\"</span><span class=\"token punctuation\">)</span>\n      time <span class=\"token operator\">=</span> <span class=\"token builtin\">Time</span><span class=\"token punctuation\">.</span>now <span class=\"token operator\">-</span> begin_time\n      <span class=\"token constant\">Rails</span><span class=\"token punctuation\">.</span>logger<span class=\"token punctuation\">.</span>debug<span class=\"token punctuation\">(</span><span class=\"token string\">\"===================耗时：<span class=\"token interpolation\"><span class=\"token delimiter tag\">#{</span>time<span class=\"token punctuation\">.</span>to_i<span class=\"token operator\">/</span><span class=\"token number\">60</span><span class=\"token delimiter tag\">}</span></span> 分 <span class=\"token interpolation\"><span class=\"token delimiter tag\">#{</span>time<span class=\"token punctuation\">.</span>to_i<span class=\"token operator\">-</span>time<span class=\"token punctuation\">.</span>to_i<span class=\"token operator\">/</span><span class=\"token number\">60</span><span class=\"token operator\">*</span><span class=\"token number\">60</span><span class=\"token delimiter tag\">}</span></span> 秒 <span class=\"token interpolation\"><span class=\"token delimiter tag\">#{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>time <span class=\"token operator\">-</span> time<span class=\"token punctuation\">.</span>to_i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to_i<span class=\"token delimiter tag\">}</span></span>毫秒===================\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">nil</span>\n    <span class=\"token keyword\">end</span>\n    doc <span class=\"token operator\">=</span> <span class=\"token constant\">Nokogiri</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">HTML</span><span class=\"token punctuation\">.</span>parse<span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">)</span>\n    count <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    doc<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">\"table.toolTable tbody&gt;tr\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">each</span> <span class=\"token keyword\">do</span> <span class=\"token operator\">|</span>tr<span class=\"token operator\">|</span>\n      tr<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">'td'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to_a<span class=\"token punctuation\">.</span>in_groups_of<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">each</span> <span class=\"token keyword\">do</span> <span class=\"token operator\">|</span>tds<span class=\"token operator\">|</span>\n        ext <span class=\"token operator\">=</span>  tds<span class=\"token punctuation\">.</span>first<span class=\"token punctuation\">.</span>text\n        content_type <span class=\"token operator\">=</span> tds<span class=\"token punctuation\">.</span>last<span class=\"token punctuation\">.</span>text \n        http_content_type <span class=\"token operator\">=</span> <span class=\"token constant\">HttpContentType</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">new</span><span class=\"token punctuation\">(</span>content_type<span class=\"token punctuation\">:</span> content_type<span class=\"token punctuation\">,</span>ext<span class=\"token punctuation\">:</span> ext<span class=\"token punctuation\">)</span>\n        http_content_type<span class=\"token punctuation\">.</span>save\n         count <span class=\"token operator\">+</span><span class=\"token operator\">=</span><span class=\"token number\">1</span>\n      <span class=\"token keyword\">end</span>\n    <span class=\"token keyword\">end</span>\n    time <span class=\"token operator\">=</span> <span class=\"token builtin\">Time</span><span class=\"token punctuation\">.</span>now <span class=\"token operator\">-</span> begin_time\n    <span class=\"token constant\">Rails</span><span class=\"token punctuation\">.</span>logger<span class=\"token punctuation\">.</span>debug<span class=\"token punctuation\">(</span><span class=\"token string\">\"===================成功抓取<span class=\"token interpolation\"><span class=\"token delimiter tag\">#{</span>count<span class=\"token delimiter tag\">}</span></span>条===================\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token constant\">Rails</span><span class=\"token punctuation\">.</span>logger<span class=\"token punctuation\">.</span>debug<span class=\"token punctuation\">(</span><span class=\"token string\">\"===================耗时：<span class=\"token interpolation\"><span class=\"token delimiter tag\">#{</span>time<span class=\"token punctuation\">.</span>to_i<span class=\"token operator\">/</span><span class=\"token number\">60</span><span class=\"token delimiter tag\">}</span></span> 分 <span class=\"token interpolation\"><span class=\"token delimiter tag\">#{</span>time<span class=\"token punctuation\">.</span>to_i<span class=\"token operator\">-</span>time<span class=\"token punctuation\">.</span>to_i<span class=\"token operator\">/</span><span class=\"token number\">60</span><span class=\"token operator\">*</span><span class=\"token number\">60</span><span class=\"token delimiter tag\">}</span></span> 秒 <span class=\"token interpolation\"><span class=\"token delimiter tag\">#{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>time <span class=\"token operator\">-</span> time<span class=\"token punctuation\">.</span>to_i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to_i<span class=\"token delimiter tag\">}</span></span>毫秒===================\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">end</span>\n</code></pre>"
      },
      {
          "title": "ransank enum 混用问题",
          "content": "<pre class=\"language-rb\"><code> <span class=\"token comment\"># 状态rasank 转换</span>\n  ransacker <span class=\"token symbol\">:status</span><span class=\"token punctuation\">,</span> formatter<span class=\"token punctuation\">:</span> proc <span class=\"token punctuation\">{</span><span class=\"token operator\">|</span>v<span class=\"token operator\">|</span> statuses<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span> <span class=\"token keyword\">do</span> <span class=\"token operator\">|</span>parent<span class=\"token operator\">|</span>\n    parent<span class=\"token punctuation\">.</span>table<span class=\"token punctuation\">[</span><span class=\"token symbol\">:status</span><span class=\"token punctuation\">]</span>\n  <span class=\"token keyword\">end</span>\n\n</code></pre>"
      },
      {
          "title": "devise重置密码",
          "content": "<pre class=\"language-rb\"><code><span class=\"token comment\"># smtp.yml 配置</span>\nsmtp<span class=\"token punctuation\">:</span> <span class=\"token operator\">&amp;</span>smtp\n  address<span class=\"token punctuation\">:</span>              <span class=\"token string\">'smtp.qq.com'</span>\n  port<span class=\"token punctuation\">:</span>                 <span class=\"token string\">'465'</span>\n  domain<span class=\"token punctuation\">:</span>               <span class=\"token string\">'446042055@qq.com'</span>\n  user_name<span class=\"token punctuation\">:</span>            <span class=\"token string\">\"446042055@qq.com\"</span>\n  password<span class=\"token punctuation\">:</span>             <span class=\"token string\">\"zyinqdkuznuabgcf\"</span>\n  authentication<span class=\"token punctuation\">:</span>       <span class=\"token symbol\">:plain</span>\n  enable_starttls_auto<span class=\"token punctuation\">:</span> <span class=\"token keyword\">true</span>\n  ssl<span class=\"token punctuation\">:</span>                  <span class=\"token keyword\">true</span>\n  tls<span class=\"token punctuation\">:</span>                  <span class=\"token keyword\">true</span>\n\ndevelopment<span class=\"token punctuation\">:</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">:</span> <span class=\"token operator\">*</span>smtp\n\ntest<span class=\"token punctuation\">:</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">:</span> <span class=\"token operator\">*</span>smtp\n\nproduction<span class=\"token punctuation\">:</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">:</span> <span class=\"token operator\">*</span>smtp\n  <span class=\"token comment\"># config/develompment.rb</span>\n   config<span class=\"token punctuation\">.</span>action_mailer<span class=\"token punctuation\">.</span>delivery_method <span class=\"token operator\">=</span> <span class=\"token symbol\">:smtp</span>\n  config<span class=\"token punctuation\">.</span>action_mailer<span class=\"token punctuation\">.</span>default <span class=\"token symbol\">:charset</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">\"utf-8\"</span>\n  config<span class=\"token punctuation\">.</span>action_mailer<span class=\"token punctuation\">.</span>smtp_settings <span class=\"token operator\">=</span> <span class=\"token constant\">Rails</span><span class=\"token punctuation\">.</span>application<span class=\"token punctuation\">.</span>config_for<span class=\"token punctuation\">(</span><span class=\"token symbol\">:smtp</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>symbolize_keys<span class=\"token operator\">!</span>\n  \n  <span class=\"token comment\"># 配置邮箱</span>\n  config<span class=\"token punctuation\">.</span>action_mailer<span class=\"token punctuation\">.</span>default_url_options <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> host<span class=\"token punctuation\">:</span> <span class=\"token string\">'localhost'</span><span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">:</span> <span class=\"token number\">3000</span> <span class=\"token punctuation\">}</span>\n</code></pre>"
      }
  ],
  },

  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (options) {

  },

  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function () {

  },

  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function () {

  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function () {

  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function () {

  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function () {

  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function () {

  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function () {

  }
})